// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                        Int                         @id @default(autoincrement())
  name                      String
  email                     String
  password                  String
  created_at                DateTime                    @default(now())
  updated_at                DateTime                    @updatedAt
  wallet                    UsersWallet?
  UsersForgotPasswordTokens UsersForgotPasswordTokens[]
}

model UsersWallet {
  id                Int                 @id @default(autoincrement())
  userId            Int                 @unique
  user              User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  created_at        DateTime            @default(now())
  updated_at        DateTime            @updatedAt
  UsersWalletAssets UsersWalletAssets[]
}

model Asset {
  id                       Int                 @id @default(autoincrement())
  name                     String
  logo                     String
  b3_ticket                String
  api_ticket               String
  sector                   String
  industry                 String?
  address                  String
  city                     String
  state                    String?
  country                  String
  zip                      String?
  website                  String?
  employees                Int?
  ceo                      String?
  total_stocks             BigInt?
  last_12_months_dividends BigInt?
  price                    Float
  AssetData                AssetData[]
  created_at               DateTime            @default(now())
  updated_at               DateTime            @updatedAt
  last_time_data_updated   DateTime            @default(now())
  last_time_price_updated  DateTime            @default(now())
  UsersWalletAssets        UsersWalletAssets[]
}

model AssetData {
  id             Int      @id @default(autoincrement())
  revenue        BigInt?
  net_income     BigInt?
  dividends_paid BigInt?
  fco            BigInt?
  fcf            BigInt?
  ebit           BigInt?
  cash           BigInt?
  equity         BigInt?
  net_margin     Int?
  roe            Int?
  payout         Int?
  year           Int
  quarter        Int?
  assetId        Int
  asset          Asset    @relation(fields: [assetId], references: [id], onDelete: Cascade)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
}

model UsersWalletAssets {
  id           Int         @id @default(autoincrement())
  quantity     Int
  assetId      Int
  asset        Asset       @relation(fields: [assetId], references: [id], onDelete: Cascade)
  userWalletId Int
  userWallet   UsersWallet @relation(fields: [userWalletId], references: [id], onDelete: Cascade)
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
}

model UsersForgotPasswordTokens {
  id         Int      @id @default(autoincrement())
  token      String
  userId     Int
  expires_at DateTime
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
